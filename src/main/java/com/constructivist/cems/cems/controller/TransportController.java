package com.constructivist.cems.cems.controller;

import com.constructivist.cems.cems.model.Transport;
import com.constructivist.cems.cems.model.User;
import com.constructivist.cems.cems.model.UserId;
import com.constructivist.cems.cems.service.TransportService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

import java.util.List;
@CrossOrigin(origins = "*", allowedHeaders = "*")
@RestController
@RequestMapping("/api/transport")
public class TransportController {

    @Autowired
    private TransportService transportService;

    // Get all vehicles for a user
    @GetMapping("/vehicles/{userId}")
    public List<Transport> getVehiclesByUser(@PathVariable("users") User users) {
        return transportService.getVehiclesByUser(users);
    }

    // Get total pollution for a user
    @GetMapping("/pollution/{userId}")
    public double getTotalPollutionByUser(@PathVariable("userId") User userId) {
        return transportService.getTotalPollutionByUser(userId);
    }

    // Get total energy regenerated by EVs for a user
    @GetMapping("/energy-regenerated/{userId}")
    public double getTotalEnergyRegeneratedByUser(@PathVariable("userId") User userId) {
        return transportService.getTotalEnergyRegeneratedByUser(userId);
    }

    // Create or update a vehicle
    @PostMapping("/vehicle")
    public ResponseEntity<Transport> createVehicle(@RequestBody Transport vehicle) {
        Transport savedVehicle = transportService.saveTransport(vehicle);
        return ResponseEntity.status(HttpStatus.CREATED).body(savedVehicle);
    }

    // Delete a vehicle by ID
    @DeleteMapping("/vehicle/{id}")
    public ResponseEntity<Void> deleteVehicle(@PathVariable("id") Long id) {
        transportService.deleteTransport(id);
        return ResponseEntity.noContent().build();
    }
}

